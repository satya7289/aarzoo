{"version":3,"sources":["components/Sidebar.js","components/ShowResult.js","components/Pagination.js","components/Search.js","components/Chart.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","className","class","ShowResult","datalist","data","map","d","key","Math","random","pub_date","headline","main","abstract","web_url","source","Pagination","postsPerPage","totalPosts","paginate","search","pageNumbers","i","ceil","push","console","log","number","onClick","href","Search","state","page","onChangeHandle","e","setState","target","value","onSubmitHandle","preventDefault","props","AddSearch","onSubmit","this","type","placeholder","aria-label","onChange","React","Component","Chart","factes","style","width","height","year","article","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","fill","PureComponent","jsfiddleUrl","Result","loading","meta","facets","API_URL","PUBLIC_KEY","axios","get","params","then","res","response","docs","catch","error","hits","pub_year","App","offset","time","s","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.161abd36.chunk.js","sourcesContent":["import React from 'react';\n\nconst Sidebar = () => {\n\n\n  return (\n    <div className=\"side-bar\">\n        <nav>\n        <ul class=\"\">\n            <li className=\"active\">\n            \n            </li>\n            <li>\n                Article\n            </li>\n            <li>\n                Analytics\n            </li>\n            <li>\n                Message\n            </li>\n            <li>\n                Calander\n            </li>\n        </ul>\n        </nav>\n    </div>\n  );\n};\n\nexport default Sidebar;","import React from 'react';\n\nconst ShowResult = ({ data }) => {\n    const datalist = data.map(d => {\n        return (\n            <tr key={Math.random*10}>\n                <td>\n                    {d.pub_date}\n                </td>\n                <td>\n                    {d.headline.main}\n                </td>\n                <td>\n                    {d.abstract}\n                </td>\n                <td>\n                    {d.web_url}\n                </td>\n                <td>\n                    {d.source}\n                </td>\n            </tr>\n        )\n    })\n    return (\n        <div className=\"card bg-light border-0\">\n            <div className=\"card-body\">\n                <h5> Articles </h5>\n                <div className=\"table-sm mt-0\">\n                    <table className=\"table table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Published Date</th>\n                            <th>Headline</th>\n                            <th>Summary</th>\n                            <th>Url</th>\n                            <th>Source</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                            {datalist}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ShowResult;","import React from 'react';\n\nconst Pagination = ({ postsPerPage, totalPosts, search, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(100 / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const next = () =>{\n    console.log(\"clicked\")\n  }\n  console.log(totalPosts,\"totalpost\");\n  return (\n    <nav>\n      <ul className='pagination float-right'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => paginate(number)} href='' className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n        <li>\n            <a onClick={next} className='page-link text-primary'>\n              >>\n            </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;","import React from 'react';\n\n\nclass Search extends React.Component{\n  state = {\n    page :0,\n    search:'',\n  }\n\n  onChangeHandle = (e) =>{\n    this.setState({\n      page:0,\n      search:e.target.value\n    });\n  }\n\n  onSubmitHandle = (e) => {\n    e.preventDefault();\n    this.props.AddSearch(this.state);\n  }\n\n\n  render(){\n    return (\n      <nav>\n        <form className=\"form-inline my-2 my-lg-0\" onSubmit={this.onSubmitHandle}>\n        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" onChange={this.onChangeHandle}/>\n        <button className=\"btn btn-outline-success my-2 my-sm-0\">Search</button>\n        </form>\n        search query: {this.state.search}\n        \n      </nav>\n      \n    )\n  }\n};\n\nexport default Search;\n\n\n// class App extends React.Component {\n//   constructor() {\n//     super();\n//     this.ref = React.createRef();\n//     this.state = {\n//       search:'',\n//       page:0,\n//       isLoading:false,\n//       result:[],\n//       totalPosts:0,\n//     };\n//   }\n\n//   searchAPI = async (q,page) => {\n//     const API_URL = 'https://api.nytimes.com/svc/search/v2/articlesearch.json';\n//     const PUBLIC_KEY = 'xrp7NPZMKRQ3U8nmHM5UMXu2XwBKYXei';\n//     const query = API_URL + '?q=' + q + '&page=' + page +'&api-key=' + PUBLIC_KEY;\n//     const result = await fetch(query);\n//     const return_json = await result.json();\n//     console.log(query);\n//     return return_json;\n//   }\n\n//   onSubmit = (e) => {\n//     e.preventDefault();\n\n//     this.state.search = this.ref.current.value;\n//     this.state.page = 0;\n\n//     this.state.result = this.searchAPI(this.state.search,this.state.page);\n\n//     this.ref.current.value = '';\n//     console.log(this.state,this.state.result);\n//   }\n\n  \n//   paginate = (number,query) => { \n//     this.state.search=query;\n//     this.state.page = number;\n//     this.state.result = this.searchAPI(this.state.search,this.state.page);\n//     console.log(number,query,this.state);\n//   }\n\n\n//   render(){\n//     return (\n//       <div className=\"wrapper\">\n//         <Sidebar/>\n//         <div className=\"content\">\n//           <section>\n//             <form className=\"form-inline my-2 my-lg-0\" onSubmit={this.onSubmit}>\n//             <input className=\"form-control mr-sm-2\" type=\"search\" ref={this.ref} placeholder=\"Search\" aria-label=\"Search\"/>\n//             <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n//             </form>\n//           </section>\n\n\n//           <Result/>\n//             <Pagination postsPerPage={10} totalPosts={100} query={this.state.search} paginate={this.paginate}/>\n//         </div>\n            \n//       </div>\n//     );\n//   }\n// };\n\n\n/*\n  searchAPI = async (q,page) => {\n    // const API_URL = 'https://api.nytimes.com/svc/search/v2/articlesearch.json';\n    // const PUBLIC_KEY = 'xrp7NPZMKRQ3U8nmHM5UMXu2XwBKYXei';\n    // const query = API_URL + '?q=' + q + '&page=' + page +'&api-key=' + PUBLIC_KEY;\n    // const result = await fetch(query);\n    // const return_json = await result.json();\n    // console.log(query);\n    return 'return_json';\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    this.state.search = this.ref.current.value;\n    this.state.page = 0;\n\n    this.state.result = this.searchAPI(this.state.search,this.state.page);\n\n    this.ref.current.value = '';\n    \n    console.log(this.resultRef.current.html);\n    console.log(this.state,this.state.result);\n  }\n\n  \n  paginate = (number,query) => { \n    this.state.search=query;\n    this.state.page = number;\n    // this.state.result = this.searchAPI(this.state.search,this.state.page);\n    console.log(number,query,this.state);\n  }\n\n*/","import React, { PureComponent } from 'react';\nimport {\n    AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip,ResponsiveContainer,\n  } from 'recharts';\nimport Search from './Search';\n\nclass Chart extends PureComponent {\n    static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\n  \n    render() {\n        const {search,factes} = this.props;\n        const data = [\n            {\n              year: '2011', article: 4000,\n            },\n            {\n                year: '2012', article: 3000,\n            },\n            {\n                year: '2013', article: 2000,\n            },\n            {\n                year: '2014', article: 2780,\n            },\n            {\n                year: '2015', article: 1890,\n            },\n            {\n                year: '2016', article: 2390,\n            },\n            {\n                year: '2017', article: 3490,\n            },\n            {\n                year: '2018', article: 3490,\n            },\n            {\n                year: '2019', article: 3490,\n            },\n            {\n                year: '2020', article: 3490,\n            },\n          ];\n        return (\n            <div style={{ width: '100%', height: 300 }} className=\"card-body bg-light mt-2\">\n                NUMBER OF ARTICLE PUBLISHED FOR \"{search}\"\n                <ResponsiveContainer>\n                <AreaChart\n                    data={data}\n                    margin={{\n                    top: 10, right: 30, left: 0, bottom: 0,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"year\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"article\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        );\n      }\n  }\n\n\nexport default Chart;","import React from 'react';\nimport axios from 'axios';\nimport ShowResult from './ShowResult';\nimport Pagination from './Pagination';\nimport Chart from './Chart'\n\nclass Result extends React.Component {\n    state = {\n        data:[],\n        loading:false,\n        meta: {},\n        facets:{}\n    }\n\n    componentDidUpdate(){\n        const {search, page} = this.props;\n        const API_URL = 'https://api.nytimes.com/svc/search/v2/articlesearch.json';\n        const PUBLIC_KEY = 'xrp7NPZMKRQ3U8nmHM5UMXu2XwBKYXei';\n        const query = API_URL + '?q=' + search + '&page=' + page +'&api-key=' + PUBLIC_KEY;\n        if(!this.state.loading){\n            \n            axios.get(API_URL,{params:{\n                    'q':search,\n                    'sort':'newest',\n                    'facet_fields':'pub_year',\n                    'begin_date':'20110101',\n                    'end_date':'20201212',\n                    'facet_filter':true,\n                    'facet':true,\n                    'page':page,\n                    'api-key':PUBLIC_KEY,\n                }\n            })\n            .then(res=>{\n                console.log(res);\n              this.setState({\n                data:res.data.response.docs,\n                meta:res.data.response.meta,\n                facets:res.data.response.facets,\n                loading:true\n              })\n            })\n            .catch(function(error){\n                console.log(error);\n            })\n        }\n    };\n\n    render(){\n        const { search, page } = this.props;\n        const { data, loading, meta} = this.state;\n        const paginate = (number) =>{\n            console.log(number);\n        }\n        if(search==''){\n            return null\n        }\n        else if(loading){\n            return(\n                <div className=\"fluid-container\">\n                    Here are your search results for \"{search}\" \n                    <ShowResult data={this.state.data}/> \n\n                    <Pagination postsPerPage={10} totalPosts={this.state.meta.hits} search={search} paginate={paginate}/>\n\n                    <Chart search={search} facets={this.state.facets.pub_year}/>\n                </div>\n            )\n        }\n        else{\n            return (\n                <div>loading...</div>\n            )\n        }\n       \n    }\n       \n  \n    \n\n};\n\nexport default Result;","import React from 'react';\nimport './App.css';\n\n\n// import Search from './components/Search';\nimport Sidebar from './components/Sidebar';\nimport Result from './components/Result';\nimport Search from './components/Search';\nimport Pagination from './components/Pagination';\nimport Chart from './components/Chart'\n\nclass App extends React.Component {\n  \n  state = {\n    search: '',\n    page:0,\n    meta: {\n      hits: 265387,\n      offset: 0,\n      time: 149\n    },\n  }  \n\n  AddSearch =(s)=>{\n    this.setState({\n      search:s.search,\n      page:s.page\n    })\n  }\n\n\n  render(){\n    console.log(this.state.search);\n    const { search, page }=this.state;\n    const paginate = (number) =>{\n      console.log(number);\n    }\n\n    return (\n      <div className=\"wrapper\">\n        <Sidebar/>\n        <div className=\"content\">\n          <Search AddSearch={this.AddSearch}/>\n          <Result search={this.state.search} page={this.state.page}/>\n         \n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}